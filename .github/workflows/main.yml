# name: Build and Deploy
# on:
#   push:
#     branches: [master]
#   workflow_dispatch:

# jobs:
#   build:
#     name: Build ‚õèÔ∏è
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@main
#       - name: Install dependencies
#         run: npm ci --legacy-peer-deps
#       - name: Build dependencies
#         run: npm run build
#         env:
#           CI: false
#       - name: Archive production artifact
#         uses: actions/upload-artifact@main
#         with:
#           name: build
#           path: build
#   deploy:
#     name: Deploy üöÄ
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@main
#       - name: Download Artifact
#         uses: actions/download-artifact@main
#         with:
#           name: build
#       - name: Sync files to hosting
#         uses: SamKirkland/FTP-Deploy-Action@v4.3.4
#         with:
#           server: ftp.infinityfree.com
#           username: ${{ secrets.ftp_username }}
#           password: ${{ secrets.ftp_password }}
#           server-dir: /tmis-solutions.kesug.com/htdocs/

# name: Build and Deploy

# on:
#   push:
#     branches: [master]
#   workflow_dispatch:

# jobs:
  build:
    name: Build ‚õèÔ∏è
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Build dependencies
        run: npm run build
        env:
          CI: false
      - name: Archive production artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  deploy:
    name: Deploy üöÄ
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Sync files to hosting
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ftp.coolpinservice.com # Replace with your Hostinger FTP server
          username: ${{ secrets.ftp_hostinger_username }}
          password: ${{ secrets.ftp_hostinger_password }}
          server-dir: /public_html/ # Replace with your Hostinger server directory



name: Generate a build and push to another branch

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - name: git-checkout
        uses: actions/checkout@v3

      - name: Install all dependencies
        run: npm install

      - name: Build
        run: npm run build # The build command of your project

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: master # The branch name where you want to push the assets
          FOLDER: build # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message